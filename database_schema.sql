-- ================================================================
-- ๐๏ธ ูุธุงู ุฅุฏุงุฑุฉ ุงููููุฏ - Delegation Management System
-- ================================================================
-- 
-- ูุฐุง ุงูููู ูุญุชูู ุนูู Schema ูุงูู ููุงุนุฏุฉ ุงูุจูุงูุงุช
-- ููุฏู ุฅูู ุฅุฏุงุฑุฉ ุงููููุฏ ุงูุฑุณููุฉ ูุงูุฃุญุฏุงุซ ุงูุนุณูุฑูุฉ ูุงููุฏููุฉ
--
-- ุงููุคูู: ูุฑูู ุงูุชุทููุฑ
-- ุงูุชุงุฑูุฎ: 2024
-- ================================================================

-- ุชูุนูู ุงูุฅุถุงูุงุช ุงููุทููุจุฉ
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";  -- ูุฅูุดุงุก UUIDs ุชููุงุฆูุงู
CREATE EXTENSION IF NOT EXISTS "pg_trgm";    -- ููุจุญุซ ุงููุตู ุงููุชูุฏู

-- ================================================================
-- ๐ ุฃููุงุน ุงูุจูุงูุงุช ุงููุฎุตุตุฉ (ENUMs)
-- ================================================================

-- ุฃุฏูุงุฑ ุงููุณุชุฎุฏููู ูู ุงููุธุงู
CREATE TYPE user_role AS ENUM (
    'SUPER_ADMIN',  -- ูุฏูุฑ ุงููุธุงู - ุตูุงุญูุงุช ูุงููุฉ + Django Admin Dashboard
    'ADMIN',        -- ูุฏูุฑ - ุตูุงุญูุงุช ูุงููุฉ ูู Frontend ููุท (ุจุฏูู Django Admin)
    'USER'          -- ูุณุชุฎุฏู - ุตูุงุญูุงุช ูุญุฏูุฏุฉ (ุนุฑุถ ูุฅุถุงูุฉ ููุท)
);

-- ุฃููุงุน ุงููููุฏ
CREATE TYPE delegation_type AS ENUM (
    'MILITARY',     -- ููุฏ ุนุณูุฑู
    'CIVILIAN'      -- ููุฏ ูุฏูู
);

-- ุญุงูุงุช ุงููููุฏ
CREATE TYPE delegation_status AS ENUM (
    'NOT_DEPARTED',         -- ูู ูุบุงุฏุฑ ุฃุญุฏ
    'PARTIALLY_DEPARTED',   -- ุบุงุฏุฑ ุฌุฒุก ูู ุงูุฃุนุถุงุก
    'FULLY_DEPARTED'        -- ุบุงุฏุฑ ุฌููุน ุงูุฃุนุถุงุก
);

-- ุญุงูุงุช ุงูุฃุนุถุงุก
CREATE TYPE member_status AS ENUM (
    'NOT_DEPARTED', -- ูู ูุบุงุฏุฑ
    'DEPARTED'      -- ุบุงุฏุฑ
);

-- ููุงุญุธุฉ: ุชู ุฅุฒุงูุฉ session_type ูุฃูู ุบูุฑ ูุทููุจ ูู ุงููุธุงู
-- ุฌูุณุงุช ุงููุบุงุฏุฑุฉ ุจุณูุทุฉ ููุฑูุฉ ุจุฏูู ุชุตููู ูุนูุฏ

-- ================================================================
-- ๐ฅ ุฌุฏูู ุงููุณุชุฎุฏููู
-- ================================================================
-- 
-- ูุฎุฒู ุจูุงูุงุช ุฌููุน ุงููุณุชุฎุฏููู ูุน ูุธุงู ุตูุงุญูุงุช ูุชุฏุฑุฌ
-- ูู ูุณุชุฎุฏู ูู ุฏูุฑ ูุญุฏุฏ ูุญุฏุฏ ุตูุงุญูุงุชู ูู ุงููุธุงู
--
CREATE TABLE users (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    username VARCHAR(50) UNIQUE NOT NULL,           -- ุงุณู ุงููุณุชุฎุฏู ููุฏุฎูู
    full_name VARCHAR(100) NOT NULL,                -- ุงูุงุณู ุงููุงูู
    password_hash TEXT NOT NULL,                    -- ูููุฉ ุงููุฑูุฑ ูุดูุฑุฉ
    is_active BOOLEAN DEFAULT TRUE,                 -- ูู ุงูุญุณุงุจ ูุดุทุ
    is_staff BOOLEAN DEFAULT FALSE,                 -- ูู ููููู ุงูุฏุฎูู ุนูู Django Adminุ (ููุท ููู SUPER_ADMIN)
    is_superuser BOOLEAN DEFAULT FALSE,             -- ูู ูู ุตูุงุญูุงุช Django ูุงููุฉุ (ููุท ููู SUPER_ADMIN)
    role user_role NOT NULL,                        -- ุฏูุฑ ุงููุณุชุฎุฏู ูู ุงููุธุงู
    last_login TIMESTAMPTZ,                         -- ุขุฎุฑ ุชุณุฌูู ุฏุฎูู
    created_by UUID,                                -- ูู ุฃูุดุฃ ูุฐุง ุงููุณุชุฎุฏูุ
    created_at TIMESTAMPTZ DEFAULT NOW(),           -- ุชุงุฑูุฎ ุงูุฅูุดุงุก
    updated_by UUID,                                -- ูู ุขุฎุฑ ูู ุนุฏู ุนูููุ
    updated_at TIMESTAMPTZ DEFAULT NOW(),           -- ุชุงุฑูุฎ ุขุฎุฑ ุชุนุฏูู
    device_info JSONB DEFAULT '{}',                 -- ูุนูููุงุช ุงูุฌูุงุฒ (ูุฑููุฉ ูู ุชุฎุฒูู ุจูุงูุงุช ุฅุถุงููุฉ)
    
    -- ุงูุนูุงูุงุช ุงูุฎุงุฑุฌูุฉ
    CONSTRAINT fk_user_created_by FOREIGN KEY (created_by) REFERENCES users(id) ON DELETE SET NULL,
    CONSTRAINT fk_user_updated_by FOREIGN KEY (updated_by) REFERENCES users(id) ON DELETE SET NULL
);

-- ููุงุฑุณ ูุชุญุณูู ุงูุฃุฏุงุก
CREATE INDEX idx_users_role ON users(role);
CREATE INDEX idx_users_active ON users(is_active);
CREATE INDEX idx_users_username ON users(username);

-- ================================================================
-- ๐ ุงูุจูุงูุงุช ุงููุฑุฌุนูุฉ - ุงูุฌูุณูุงุช
-- ================================================================
-- 
-- ูุงุฆูุฉ ุจุงูุฌูุณูุงุช ุงููุชุงุญุฉ ูููููุฏ
-- ูููู ุฅุถุงูุฉ ุฌูุณูุงุช ุฌุฏูุฏุฉ ุญุณุจ ุงูุญุงุฌุฉ
--
CREATE TABLE nationality (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    name VARCHAR(100) UNIQUE NOT NULL,              -- ุงุณู ุงูุฌูุณูุฉ
    created_by UUID REFERENCES users(id) ON DELETE SET NULL,
    created_at TIMESTAMPTZ DEFAULT NOW(),
    updated_by UUID REFERENCES users(id) ON DELETE SET NULL,
    updated_at TIMESTAMPTZ DEFAULT NOW()
);

-- ================================================================
-- ๐๏ธ ุงูุจูุงูุงุช ุงููุฑุฌุนูุฉ - ุงููุฏู
-- ================================================================
-- 
-- ูุงุฆูุฉ ุจุงููุฏู ูููุฌูุงุช ูุงููุทุงุฑุงุช
--
CREATE TABLE cities (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    city_name VARCHAR(100) UNIQUE NOT NULL,         -- ุงุณู ุงููุฏููุฉ
    created_by UUID REFERENCES users(id) ON DELETE SET NULL,
    created_at TIMESTAMPTZ DEFAULT NOW(),
    updated_by UUID REFERENCES users(id) ON DELETE SET NULL,
    updated_at TIMESTAMPTZ DEFAULT NOW()
);

-- ================================================================
-- โ๏ธ ุงูุจูุงูุงุช ุงููุฑุฌุนูุฉ - ุดุฑูุงุช ุงูุทูุฑุงู
-- ================================================================
-- 
-- ูุงุฆูุฉ ุจุดุฑูุงุช ุงูุทูุฑุงู ููุฑุญูุงุช
--
CREATE TABLE air_line (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    name VARCHAR(100) UNIQUE NOT NULL,              -- ุงุณู ุดุฑูุฉ ุงูุทูุฑุงู
    created_by UUID REFERENCES users(id) ON DELETE SET NULL,
    created_at TIMESTAMPTZ DEFAULT NOW(),
    updated_by UUID REFERENCES users(id) ON DELETE SET NULL,
    updated_at TIMESTAMPTZ DEFAULT NOW()
);

-- ================================================================
-- ๐ฌ ุงูุจูุงูุงุช ุงููุฑุฌุนูุฉ - ุงููุทุงุฑุงุช
-- ================================================================
-- 
-- ูุงุฆูุฉ ุจุงููุทุงุฑุงุช ูููุตูู ูุงููุบุงุฏุฑุฉ
--
CREATE TABLE air_port (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    name VARCHAR(100) UNIQUE NOT NULL,              -- ุงุณู ุงููุทุงุฑ
    created_by UUID REFERENCES users(id) ON DELETE SET NULL,
    created_at TIMESTAMPTZ DEFAULT NOW(),
    updated_by UUID REFERENCES users(id) ON DELETE SET NULL,
    updated_at TIMESTAMPTZ DEFAULT NOW()
);

-- ================================================================
-- ๐๏ธ ุงูุจูุงูุงุช ุงููุฑุฌุนูุฉ - ุงููุธุงุฆู ุงููุนุงุฏูุฉ
-- ================================================================
-- 
-- ูุงุฆูุฉ ุจุงููุธุงุฆู ุงูุนุณูุฑูุฉ ุงููุนุงุฏูุฉ
-- ูุซุงู: "ุฑุฆูุณ ุฃุฑูุงู ุงูุจุฑูุฉ" ูุนุงุฏู "ุฑุฆูุณ ุฃุฑูุงู ุญุฑุจ"
--
CREATE TABLE equivalent_job (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    name VARCHAR(100) UNIQUE NOT NULL,              -- ุงุณู ุงููุธููุฉ ุงููุนุงุฏูุฉ
    created_by UUID REFERENCES users(id) ON DELETE SET NULL,
    created_at TIMESTAMPTZ DEFAULT NOW(),
    updated_by UUID REFERENCES users(id) ON DELETE SET NULL,
    updated_at TIMESTAMPTZ DEFAULT NOW()
);

-- ================================================================
-- ๐ช ุงูุฃุญุฏุงุซ ุงูุฑุฆูุณูุฉ
-- ================================================================
-- 
-- ุงูุฃุญุฏุงุซ ุงููุจูุฑุฉ ูุซู: EDEXุ ุงููุฑูุณูุฉุ ุงููุฌู ุงูุณุงุทุนุ ูุนุฑุถ ุงูุทุงุฆุฑุงุช
-- ูุฐู ุชุธูุฑ ูู ุงูุณุงูุฏ ุจุงุฑ ูุฑุฆูุณูุฉ
--
CREATE TABLE main_event (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    event_name VARCHAR(100) NOT NULL,               -- ุงุณู ุงูุญุฏุซ ุงูุฑุฆูุณู
    event_link TEXT,                                -- ุฑุงุจุท ุงูุญุฏุซ (ุงุฎุชูุงุฑู)
    event_icon TEXT,                                -- ุฃููููุฉ ุงูุญุฏุซ (ุงุฎุชูุงุฑู)
    created_by UUID REFERENCES users(id) ON DELETE SET NULL,
    created_at TIMESTAMPTZ DEFAULT NOW(),
    updated_by UUID REFERENCES users(id) ON DELETE SET NULL,
    updated_at TIMESTAMPTZ DEFAULT NOW()
);

-- ================================================================
-- ๐ ุงูุฃุญุฏุงุซ ุงููุฑุนูุฉ
-- ================================================================
-- 
-- ุงูุฃุญุฏุงุซ ุงูุตุบูุฑุฉ ุชุญุช ูู ุญุฏุซ ุฑุฆูุณู
-- ูุซุงู: EDEX 2024ุ EDEX 2025 ุชุญุช ุงูุญุฏุซ ุงูุฑุฆูุณู EDEX
--
CREATE TABLE sub_event (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    main_event_id UUID NOT NULL REFERENCES main_event(id) ON DELETE CASCADE,
    event_name VARCHAR(100) NOT NULL,               -- ุงุณู ุงูุญุฏุซ ุงููุฑุนู
    created_by UUID REFERENCES users(id) ON DELETE SET NULL,
    created_at TIMESTAMPTZ DEFAULT NOW(),
    updated_by UUID REFERENCES users(id) ON DELETE SET NULL,
    updated_at TIMESTAMPTZ DEFAULT NOW()
);

-- ููุฑุณ ูุชุญุณูู ุงูุจุญุซ ุญุณุจ ุงูุญุฏุซ ุงูุฑุฆูุณู
CREATE INDEX idx_sub_event_main_event_id ON sub_event(main_event_id);

-- ================================================================
-- ๐๏ธ ุงููููุฏ
-- ================================================================
-- 
-- ุงููููุฏ ุงููุดุงุฑูุฉ ูู ุงูุฃุญุฏุงุซ ุงููุฑุนูุฉ
-- ูุญุชูู ุนูู ูุนูููุงุช ุงููุตูู ูุงูุชูุงุตูู ุงูุฃุณุงุณูุฉ
--
CREATE TABLE delegation (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    sub_event_id UUID NOT NULL REFERENCES sub_event(id) ON DELETE CASCADE,
    nationality_id UUID REFERENCES nationality(id) ON DELETE SET NULL,
    airport_id UUID REFERENCES air_port(id) ON DELETE SET NULL,
    airline_id UUID REFERENCES air_line(id) ON DELETE SET NULL,
    city_id UUID REFERENCES cities(id) ON DELETE SET NULL,
    delegation_leader_name VARCHAR(100) NOT NULL,   -- ุงุณู ุฑุฆูุณ ุงูููุฏ
    member_count INT CHECK (member_count >= 0),     -- ุนุฏุฏ ุงูุฃุนุถุงุก ุงููุญุฏุฏ ููููุฏ (ูู ุงููุฑููุช)
    current_members INT DEFAULT 0,                  -- ุงูุนุฏุฏ ุงูุญุงูู ููุฃุนุถุงุก (ูุญุณูุจ ุชููุงุฆูุงู)
    flight_number VARCHAR(20),                      -- ุฑูู ุงูุฑุญูุฉ
    type delegation_type NOT NULL,                  -- ููุน ุงูููุฏ (ุนุณูุฑู/ูุฏูู)
    status delegation_status DEFAULT 'NOT_DEPARTED', -- ุญุงูุฉ ุงูููุฏ (ูุญุณูุจุฉ ุชููุงุฆูุงู)
    arrive_date DATE,                               -- ุชุงุฑูุฎ ุงููุตูู
    arrive_time TIME,                               -- ุณุงุนุฉ ุงููุตูู
    receiver_name VARCHAR(100),                     -- ุงุณู ุงููุณุชูุจู (ูุฑุชุจุชู)
    going_to VARCHAR(255),                          -- ุงููุฌูุฉ (ุงูููุฏู ุฃู ุงูููุงู ุงููู ููุฑูุญูุง ุนููู)
    goods TEXT,                                     -- ุงูุดุญูุงุช
    -- ููุงุญุธุฉ: ุชู ุฅุฒุงูุฉ arrival_info ู departure_info ูุชุฌูุจ ุงูุชูุฑุงุฑ
    -- ุฌููุน ูุนูููุงุช ุงููุตูู ููุฌูุฏุฉ ูู ุงูุญููู ุงูุนุงุฏูุฉ ุฃุนูุงู
    created_by UUID REFERENCES users(id) ON DELETE SET NULL,
    created_at TIMESTAMPTZ DEFAULT NOW(),
    updated_by UUID REFERENCES users(id) ON DELETE SET NULL,
    updated_at TIMESTAMPTZ DEFAULT NOW()
);

-- ููุงุฑุณ ูุชุญุณูู ุงูุฃุฏุงุก
CREATE INDEX idx_delegation_event_id ON delegation(sub_event_id);
CREATE INDEX idx_delegation_type ON delegation(type);
CREATE INDEX idx_delegation_status ON delegation(status);

-- ================================================================
-- ๐ค ุงูุฃุนุถุงุก
-- ================================================================
-- 
-- ุฃุนุถุงุก ุงููููุฏ ูุน ูุนูููุงุชูู ุงูุนุณูุฑูุฉ ูุงููุธูููุฉ
-- ูู ุนุถู ูุฑุจูุท ุจููุฏ ูุงุญุฏ
--
CREATE TABLE member (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    delegation_id UUID NOT NULL REFERENCES delegation(id) ON DELETE CASCADE,
    rank VARCHAR(50),                               -- ุงูุฑุชุจุฉ ุงูุนุณูุฑูุฉ
    name VARCHAR(100) NOT NULL,                     -- ุงุณู ุงูุนุถู
    job_title VARCHAR(100),                         -- ุงููุธููุฉ/ุงูุฏูุฑ ุงูุญุงูู
    equivalent_job_id UUID REFERENCES equivalent_job(id) ON DELETE SET NULL, -- ุงููุธููุฉ ุงููุนุงุฏูุฉ
    status member_status DEFAULT 'NOT_DEPARTED',    -- ุญุงูุฉ ุงูุนุถู (ูุญุณูุจุฉ ุชููุงุฆูุงู)
    departure_date DATE,                            -- ุชุงุฑูุฎ ุงููุบุงุฏุฑุฉ ุงููุนูู ููุนุถู
    created_by UUID REFERENCES users(id) ON DELETE SET NULL,
    created_at TIMESTAMPTZ DEFAULT NOW(),
    updated_by UUID REFERENCES users(id) ON DELETE SET NULL,
    updated_at TIMESTAMPTZ DEFAULT NOW()
);

-- ููุงุฑุณ ูุชุญุณูู ุงูุฃุฏุงุก
CREATE INDEX idx_member_delegation_id ON member(delegation_id);
CREATE INDEX idx_member_equivalent_job_id ON member(equivalent_job_id);
CREATE INDEX idx_member_status ON member(status);

-- ================================================================
-- ๐ซ ุฌูุณุงุช ุงููุบุงุฏุฑุฉ
-- ================================================================
-- 
-- ุฌูุณุงุช ูุบุงุฏุฑุฉ ุงููููุฏ (ูููู ููููุฏ ุงููุงุญุฏ ุฃู ูุบุงุฏุฑ ูู ุฌูุณุงุช ูุชุนุฏุฏุฉ)
-- ูู ุฌูุณุฉ ุชุญุชูู ุนูู ูุฌููุนุฉ ูู ุงูุฃุนุถุงุก
--
CREATE TABLE check_out (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    delegation_id UUID NOT NULL REFERENCES delegation(id) ON DELETE CASCADE,
    -- ููุงุญุธุฉ: ุชู ุฅุฒุงูุฉ session_type ูุชุจุณูุท ุงููุธุงู
    nationality_id UUID REFERENCES nationality(id) ON DELETE SET NULL,
    airport_id UUID REFERENCES air_port(id) ON DELETE SET NULL,
    airline_id UUID REFERENCES air_line(id) ON DELETE SET NULL,
    city_id UUID REFERENCES cities(id) ON DELETE SET NULL,
    flight_number VARCHAR(20),                      -- ุฑูู ุฑุญูุฉ ุงููุบุงุฏุฑุฉ
    checkout_date DATE,                             -- ุชุงุฑูุฎ ุงููุบุงุฏุฑุฉ
    checkout_time TIME,                             -- ุณุงุนุฉ ุงููุบุงุฏุฑุฉ
    depositor_name VARCHAR(100),                    -- ุงุณู ุงูููุฏุน (ูุฑุชุจุชู)
    goods TEXT,                                     -- ุงูุดุญูุงุช
    notes TEXT,                                     -- ููุงุญุธุงุช ุฅุถุงููุฉ
    members JSONB DEFAULT '[]',                     -- ูุงุฆูุฉ ุงูุฃุนุถุงุก ูู ูุฐู ุงูุฌูุณุฉ
    created_by UUID REFERENCES users(id) ON DELETE SET NULL,
    created_at TIMESTAMPTZ DEFAULT NOW(),
    updated_by UUID REFERENCES users(id) ON DELETE SET NULL,
    updated_at TIMESTAMPTZ DEFAULT NOW()
);

-- ููุฑุณ ูุชุญุณูู ุงูุจุญุซ ุญุณุจ ุงูููุฏ
CREATE INDEX idx_checkout_delegation_id ON check_out(delegation_id);

-- ================================================================
-- ๐ ุณุฌูุงุช ุชุณุฌูู ุงูุฏุฎูู
-- ================================================================
-- 
-- ุชุชุจุน ุฌููุน ูุญุงููุงุช ุชุณุฌูู ุงูุฏุฎูู (ูุงุฌุญุฉ ููุงุดูุฉ)
-- ูุน ูุนูููุงุช ุงูุฌูุงุฒ ูุงููููุน
--
CREATE TABLE login_logs (
    id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
    user_id UUID REFERENCES users(id) ON DELETE CASCADE,
    login_time TIMESTAMPTZ DEFAULT NOW(),           -- ููุช ูุญุงููุฉ ุงูุฏุฎูู
    ip_address INET,                                -- ุนููุงู IP
    device TEXT,                                    -- ููุน ุงูุฌูุงุฒ
    user_agent TEXT,                                -- ูุนูููุงุช ุงููุชุตูุญ
    success BOOLEAN DEFAULT TRUE                    -- ูู ูุฌุญุช ุงูุนูููุฉุ
);

-- ููุฑุณ ูุชุญุณูู ุงูุจุญุซ ุญุณุจ ุงููุณุชุฎุฏู
CREATE INDEX idx_login_logs_user_id ON login_logs(user_id);
CREATE INDEX idx_login_logs_success ON login_logs(success);

-- ================================================================
-- ๐ ุณุฌู ุงูุชุฏููู (Audit Log)
-- ================================================================
-- 
-- ุชุชุจุน ุฌููุน ุงูุชุบููุฑุงุช ูู ุงููุธุงู (ุฅุถุงูุฉุ ุชุนุฏููุ ุญุฐู)
-- ูุน ุชูุงุตูู ุงูุจูุงูุงุช ุงููุฏููุฉ ูุงูุฌุฏูุฏุฉ
--
CREATE TABLE audit_log (
    id BIGSERIAL PRIMARY KEY,
    table_name TEXT NOT NULL,                       -- ุงุณู ุงูุฌุฏูู
    record_id UUID,                                 -- ูุนุฑู ุงูุณุฌู
    action VARCHAR(10) CHECK (action IN ('INSERT', 'UPDATE', 'DELETE')), -- ููุน ุงูุนูููุฉ
    old_data JSONB,                                 -- ุงูุจูุงูุงุช ุงููุฏููุฉ
    new_data JSONB,                                 -- ุงูุจูุงูุงุช ุงูุฌุฏูุฏุฉ
    changed_by UUID REFERENCES users(id),           -- ูู ูุงู ุจุงูุชุบููุฑ
    changed_at TIMESTAMPTZ DEFAULT NOW(),           -- ููุช ุงูุชุบููุฑ
    ip_address INET,                                -- ุนููุงู IP
    user_agent TEXT                                 -- ูุนูููุงุช ุงูุฌูุงุฒ
);

-- ููุงุฑุณ ูุชุญุณูู ุงูุจุญุซ ูู ุณุฌู ุงูุชุฏููู
CREATE INDEX idx_audit_log_table_name ON audit_log(table_name);
CREATE INDEX idx_audit_log_changed_by ON audit_log(changed_by);
CREATE INDEX idx_audit_log_changed_at ON audit_log(changed_at);

-- ================================================================
-- ๐ง ุงูุฏูุงู ุงููุณุงุนุฏุฉ (Functions)
-- ================================================================

-- ุฏุงูุฉ ูุชุญุฏูุซ ุนุฏุฏ ุงูุฃุนุถุงุก ูู ุงูููุฏ ุชููุงุฆูุงู
CREATE OR REPLACE FUNCTION update_delegation_member_count()
RETURNS TRIGGER AS $$
BEGIN
    IF TG_OP = 'INSERT' OR TG_OP = 'DELETE' THEN
        -- ุชุญุฏูุซ ุงูุนุฏุฏ ุงูุญุงูู ููุฃุนุถุงุก ูู ุงูููุฏ
        UPDATE delegation 
        SET current_members = (
            SELECT COUNT(*) FROM member 
            WHERE delegation_id = COALESCE(NEW.delegation_id, OLD.delegation_id)
        )
        WHERE id = COALESCE(NEW.delegation_id, OLD.delegation_id);
    END IF;
    RETURN COALESCE(NEW, OLD);
END;
$$ LANGUAGE plpgsql;

-- ุฏุงูุฉ ูุชุญุฏูุซ ุญุงูุฉ ุงูููุฏ ุจูุงุกู ุนูู ุญุงูุฉ ุฃุนุถุงุฆู
CREATE OR REPLACE FUNCTION update_delegation_status()
RETURNS TRIGGER AS $$
DECLARE
    total_members INT;
    departed_members INT;
    new_status delegation_status;
    delegation_uuid UUID;
BEGIN
    -- ุชุญุฏูุฏ ูุนุฑู ุงูููุฏ
    delegation_uuid := COALESCE(NEW.delegation_id, OLD.delegation_id);
    
    -- ุญุณุงุจ ุนุฏุฏ ุงูุฃุนุถุงุก ุงูุฅุฌูุงูู ูุงููุบุงุฏุฑูู
    SELECT COUNT(*) INTO total_members
    FROM member 
    WHERE delegation_id = delegation_uuid;
    
    SELECT COUNT(*) INTO departed_members
    FROM member 
    WHERE delegation_id = delegation_uuid 
    AND status = 'DEPARTED';
    
    -- ุชุญุฏูุฏ ุงูุญุงูุฉ ุงูุฌุฏูุฏุฉ ููููุฏ
    IF departed_members = 0 THEN
        new_status := 'NOT_DEPARTED';
    ELSIF departed_members = total_members AND total_members > 0 THEN
        new_status := 'FULLY_DEPARTED';
    ELSE
        new_status := 'PARTIALLY_DEPARTED';
    END IF;
    
    -- ุชุญุฏูุซ ุญุงูุฉ ุงูููุฏ
    UPDATE delegation 
    SET status = new_status,
        current_members = total_members
    WHERE id = delegation_uuid;
    
    RETURN COALESCE(NEW, OLD);
END;
$$ LANGUAGE plpgsql;

-- ุฏุงูุฉ ูุชุญุฏูุซ ุญุงูุฉ ุงูุฃุนุถุงุก ุนูุฏ ุฅูุดุงุก ุฌูุณุฉ ูุบุงุฏุฑุฉ
CREATE OR REPLACE FUNCTION update_member_status_on_checkout()
RETURNS TRIGGER AS $$
BEGIN
    -- ุชุญุฏูุซ ุญุงูุฉ ุงูุฃุนุถุงุก ูู ุงูุฌูุณุฉ ุฅูู DEPARTED
    IF TG_OP = 'INSERT' OR TG_OP = 'UPDATE' THEN
        UPDATE member 
        SET status = 'DEPARTED', 
            departure_date = NEW.checkout_date
        WHERE id = ANY(
            SELECT jsonb_array_elements_text(NEW.members)::uuid
        );
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- ุฏุงูุฉ ูุฅูุดุงุก ุณุฌู ุงูุชุฏููู
CREATE OR REPLACE FUNCTION audit_trigger_func()
RETURNS TRIGGER AS $$
BEGIN
    IF (TG_OP = 'DELETE') THEN
        INSERT INTO audit_log (table_name, record_id, action, old_data, changed_by)
        VALUES (TG_TABLE_NAME, OLD.id, TG_OP, to_jsonb(OLD), current_setting('app.current_user')::uuid);
        RETURN OLD;
    ELSIF (TG_OP = 'UPDATE') THEN
        INSERT INTO audit_log (table_name, record_id, action, old_data, new_data, changed_by)
        VALUES (TG_TABLE_NAME, NEW.id, TG_OP, to_jsonb(OLD), to_jsonb(NEW), current_setting('app.current_user')::uuid);
        RETURN NEW;
    ELSIF (TG_OP = 'INSERT') THEN
        INSERT INTO audit_log (table_name, record_id, action, new_data, changed_by)
        VALUES (TG_TABLE_NAME, NEW.id, TG_OP, to_jsonb(NEW), current_setting('app.current_user')::uuid);
        RETURN NEW;
    END IF;
END;
$$ LANGUAGE plpgsql;

-- ================================================================
-- โก ุงููุดุบูุงุช (Triggers)
-- ================================================================

-- ูุดุบู ูุชุญุฏูุซ ุนุฏุฏ ุงูุฃุนุถุงุก ุนูุฏ ุฅุถุงูุฉ/ุญุฐู ุนุถู
CREATE TRIGGER trg_update_member_count
AFTER INSERT OR DELETE ON member
FOR EACH ROW EXECUTE FUNCTION update_delegation_member_count();

-- ูุดุบู ูุชุญุฏูุซ ุญุงูุฉ ุงูููุฏ ุนูุฏ ุชุบููุฑ ุญุงูุฉ ุงูุฃุนุถุงุก
CREATE TRIGGER trg_update_delegation_status
AFTER INSERT OR UPDATE OR DELETE ON member
FOR EACH ROW EXECUTE FUNCTION update_delegation_status();

-- ูุดุบู ูุชุญุฏูุซ ุญุงูุฉ ุงูุฃุนุถุงุก ุนูุฏ ุฅูุดุงุก ุฌูุณุฉ ูุบุงุฏุฑุฉ
CREATE TRIGGER trg_update_member_status_on_checkout
AFTER INSERT OR UPDATE ON check_out
FOR EACH ROW EXECUTE FUNCTION update_member_status_on_checkout();

-- ูุดุบูุงุช ุณุฌู ุงูุชุฏููู ูุฌููุน ุงูุฌุฏุงูู ุงููููุฉ
CREATE TRIGGER trg_audit_users
AFTER INSERT OR UPDATE OR DELETE ON users
FOR EACH ROW EXECUTE FUNCTION audit_trigger_func();

CREATE TRIGGER trg_audit_delegation
AFTER INSERT OR UPDATE OR DELETE ON delegation
FOR EACH ROW EXECUTE FUNCTION audit_trigger_func();

CREATE TRIGGER trg_audit_member
AFTER INSERT OR UPDATE OR DELETE ON member
FOR EACH ROW EXECUTE FUNCTION audit_trigger_func();

CREATE TRIGGER trg_audit_check_out
AFTER INSERT OR UPDATE OR DELETE ON check_out
FOR EACH ROW EXECUTE FUNCTION audit_trigger_func();

-- ================================================================
-- ๐ ุจูุงูุงุช ุชุฌุฑูุจูุฉ (ุงุฎุชูุงุฑู)
-- ================================================================

-- ุฅุฏุฑุงุฌ ูุณุชุฎุฏู ุชุฌุฑูุจู
INSERT INTO users (username, full_name, password_hash, role, is_staff, is_superuser) 
VALUES ('admin', 'ูุฏูุฑ ุงููุธุงู', '$2b$12$LQv3c1yqBWVHxkd0LHAkCOYz6TtxMQJqhN8/LewdBPj4V7K1jQyqW', 'SUPER_ADMIN', true, true);

-- ุฅุฏุฑุงุฌ ุฌูุณูุงุช ุชุฌุฑูุจูุฉ
INSERT INTO nationality (name) VALUES 
('ูุตุฑูุฉ'), ('ุณุนูุฏูุฉ'), ('ุฅูุงุฑุงุชูุฉ'), ('ุฃุฑุฏููุฉ'), ('ูููุชูุฉ');

-- ุฅุฏุฑุงุฌ ูุฏู ุชุฌุฑูุจูุฉ
INSERT INTO cities (city_name) VALUES 
('ุงููุงูุฑุฉ'), ('ุงูุฑูุงุถ'), ('ุฏุจู'), ('ุนูุงู'), ('ุงููููุช');

-- ุฅุฏุฑุงุฌ ุดุฑูุงุช ุทูุฑุงู ุชุฌุฑูุจูุฉ
INSERT INTO air_line (name) VALUES 
('ูุตุฑ ููุทูุฑุงู'), ('ุงูุฎุทูุท ุงูุณุนูุฏูุฉ'), ('ุทูุฑุงู ุงูุฅูุงุฑุงุช'), ('ุงูุฎุทูุท ุงูููููุฉ ุงูุฃุฑุฏููุฉ');

-- ุฅุฏุฑุงุฌ ูุทุงุฑุงุช ุชุฌุฑูุจูุฉ
INSERT INTO air_port (name) VALUES 
('ูุทุงุฑ ุงููุงูุฑุฉ ุงูุฏููู'), ('ูุทุงุฑ ุงูููู ุฎุงูุฏ ุงูุฏููู'), ('ูุทุงุฑ ุฏุจู ุงูุฏููู');

-- ุฅุฏุฑุงุฌ ูุธุงุฆู ูุนุงุฏูุฉ ุชุฌุฑูุจูุฉ
INSERT INTO equivalent_job (name) VALUES 
('ุฑุฆูุณ ุฃุฑูุงู ุญุฑุจ'), ('ูุงุฆุจ ุฑุฆูุณ ุฃุฑูุงู'), ('ูุงุฆุฏ ูุฑูุฉ'), ('ูุงุฆุฏ ููุงุก');

-- ================================================================
-- ๐ฏ ููุงุญุธุงุช ูููุฉ
-- ================================================================
-- 
-- 1. ุฌููุน ุงูุฌุฏุงูู ุชุณุชุฎุฏู UUID ููุนุฑู ุฑุฆูุณู ูุถูุงู ุงูุฃูุงู ูุงูุชูุฑุฏ
-- 2. ูุธุงู Audit ุดุงูู ูุชุชุจุน ุฌููุน ุงูุชุบููุฑุงุช ุชููุงุฆูุงู
-- 3. ุงูุญุงูุงุช (status) ุชุชุญุฏุฏ ุชููุงุฆูุงู ุจูุงุกู ุนูู ุงูุจูุงูุงุช ุงููุฑุชุจุทุฉ
-- 4. ุงุณุชุฎุฏุงู JSONB ูููุนูููุงุช ุงููุฑูุฉ ูุซู arrival_info ู departure_info
-- 5. ุฌููุน ุงูุนูุงูุงุช ุงูุฎุงุฑุฌูุฉ ูุญููุฉ ุจู CASCADE ุฃู SET NULL ุญุณุจ ุงูููุทู
-- 6. ุงูููุงุฑุณ ูุญุณูุฉ ููุฃุฏุงุก ุนูู ุงูุงุณุชุนูุงูุงุช ุงูุดุงุฆุนุฉ
-- 7. ุงููุดุบูุงุช ุชุถูู ุชุญุฏูุซ ุงูุจูุงูุงุช ุงููุฑุชุจุทุฉ ุชููุงุฆูุงู
-- 
-- ================================================================
-- ๐ ูุธุงู ุงูุตูุงุญูุงุช
-- ================================================================
-- 
-- SUPER_ADMIN:
-- - โ Django Admin Dashboard (is_staff=true, is_superuser=true)
-- - โ ุฌููุน ุงูุตูุงุญูุงุช ูู Frontend
-- - โ ุฅุฏุงุฑุฉ ุงููุณุชุฎุฏููู
-- 
-- ADMIN:
-- - โ Django Admin Dashboard (is_staff=false, is_superuser=false)
-- - โ ุฌููุน ุงูุตูุงุญูุงุช ูู Frontend (ุนุฏุง ุฅุฏุงุฑุฉ ุงููุณุชุฎุฏููู)
-- - โ ุฅุฏุงุฑุฉ ุงูุฃุญุฏุงุซ ูุงููููุฏ ูุงูุฃุนุถุงุก
-- - โ ุงูุชูุงุฑูุฑ ูุงูุชุตุฏูุฑ
-- 
-- USER:
-- - โ Django Admin Dashboard (is_staff=false, is_superuser=false)
-- - โ ุนุฑุถ ุงูุจูุงูุงุช ููุท
-- - โ ุฅุถุงูุฉ ูููุฏ ูุฃุนุถุงุก ูุฌูุณุงุช ูุบุงุฏุฑุฉ
-- - โ ุชุนุฏูู ุฃู ุญุฐู ุงูุจูุงูุงุช
-- - โ ุงูุชูุงุฑูุฑ ูุงูุชุตุฏูุฑ
-- 
-- ================================================================
-- โ ุงูุชูู Schema ูุงุนุฏุฉ ุงูุจูุงูุงุช
-- ================================================================
